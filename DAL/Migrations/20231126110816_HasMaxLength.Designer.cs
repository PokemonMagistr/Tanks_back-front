// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(HotlineContext))]
    [Migration("20231126110816_HasMaxLength")]
    partial class HasMaxLength
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HostId")
                        .HasColumnType("int")
                        .HasColumnName("HostID");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("Game", (string)null);
                });

            modelBuilder.Entity("DAL.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Player", (string)null);
                });

            modelBuilder.Entity("DAL.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Session", (string)null);
                });

            modelBuilder.Entity("DAL.Game", b =>
                {
                    b.HasOne("DAL.Player", "Host")
                        .WithMany("Games")
                        .HasForeignKey("HostId")
                        .IsRequired()
                        .HasConstraintName("HostID");

                    b.Navigation("Host");
                });

            modelBuilder.Entity("DAL.Session", b =>
                {
                    b.HasOne("DAL.Game", null)
                        .WithMany("Sessions")
                        .HasForeignKey("GameId");

                    b.HasOne("DAL.Player", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("PlayerID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Game", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("DAL.Player", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
